<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		">
	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans -->
	<context:component-scan base-package="com.cg.miniproject.hbms">
	</context:component-scan>

	<!-- Activates various annotations to be detected in bean classes e.g: @Autowired -->
	<context:annotation-config />

	<!-- PropertyPlaceHolderConfigurer is used to get values from property file -->
	<bean id="properties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>oracle.properties</value>
		</property>
	</bean>


	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${uname}" />
		<property name="password" value="${password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.cg.miniproject.hbms" />
		<property name="persistenceProviderClass"
			value="org.hibernate.jpa.HibernatePersistenceProvider" />
		<property name="jpaPropertyMap">
			<map>
				<!-- <entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect" 
					/> -->
				<entry key="hibernate.dialect" value="${dialect}" />
				<entry key="hibernate.hbm2ddl.auto" value="update" />
			</map>
		</property>
	</bean>

	<!-- This bean will handle all transaction within an application -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- This is required to handle transactions via Annotations like @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Email Related Config -->

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="username" value="<--senders email id--->" />
		<property name="password" value="<--email password-->" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.socketFactory.port">465</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.port">465</prop>
			</props>
		</property>
	</bean>

	<bean id="mailMail" class="com.cg.miniproject.hbms.util.MailMail">
		<property name="mailSender" ref="mailSender"></property>
	</bean>

</beans>